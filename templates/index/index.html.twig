{% extends 'base.html.twig' %}

{% block title %}Hello IndexController!{% endblock %}

{% block stylesheets %}
    <style>
        #map {
            height: 80vh;
        }
    </style>
{% endblock %}

{% block body %}

    <div class="container">

        <H1>Test Carto</H1>
        <ul id="js-journey-listing">

        </ul>
        <div id="map"></div>

    </div>
    <span id="js-data-elements" data-sites="{{ sites }}"></span>
{% endblock %}

{% block javascripts %}
    <script>
        const journeyListing = document.querySelector('#js-journey-listing');
        const dataElements = document.querySelector('#js-data-elements')
        let map = L.map('map').setView([43.440955, 2.830353], 8);
        let CartoDB_Positron = L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>',
            subdomains: 'abcd',
            maxZoom: 19
        }).addTo(map);

        //Shamelessly ripped from aidersante site
        let locations = JSON.parse(dataElements.dataset.sites);
        console.log(locations)
        let markers=[];
        for(let i=0; i<locations.length; i++){
            //adding marker to map
            markers[i] = L.marker([locations[i].lat,locations[i].lon]).addTo(map);
            //setting the popup
            markers[i].bindPopup();
            //calling the funciton to update the popup
            markers[i].addEventListener('click', e=>markerClick(e, markers[i], locations[i]))
        }

        function markerClick(e, marker, info){
            let p = marker.getPopup();
            // const journeyListing = document.querySelector('#js-journey-listing');
            let popupContent = '<p class="popup-header">'+info.name+'</p>';

            if(journeyListing.children.length >0){
                popupContent += '<p><button class="btn btn-primary js-add-to-journey js-end-journey">Arriv√©</button></p>';
                popupContent += '<p><button class="btn btn-primary js-add-to-journey">Etape</button></p>';
                popupContent += '<p><button class="btn btn-primary js-delete-journey">Effacer trajet</button></p>';

            }else{
                popupContent += '<p><button class="btn btn-primary js-add-to-journey">Depart de mon trajet</button></p>';
                popupContent += '<p><a class="btn btn-primary" href="#" style="color: #fff;">Liste des trajets</a></p>';
            }

            p.setContent(popupContent);

            const addToJourneyButtons = document.querySelectorAll('.js-add-to-journey');
            if(addToJourneyButtons){
                for (const addToJourneyButton of addToJourneyButtons){
                    addToJourneyButton.addEventListener('click', e=>addToJourney(e,info));
                    addToJourneyButton.addEventListener('click', e=>closePopup(e,marker));
                }
            }


            const deleteJourneyButton = document.querySelector('.js-delete-journey');
            if(deleteJourneyButton){
                deleteJourneyButton.addEventListener('click', e=>deleteJourney(e));
                deleteJourneyButton.addEventListener('click', e=>closePopup(e, marker));
            }

            const endJourneyButton = document.querySelector('.js-end-journey');
            if(endJourneyButton){
                endJourneyButton.addEventListener('click', e=>endJourney(e));
                endJourneyButton.addEventListener('click', e=>closePopup(e, marker));
            }

        }

        function addToJourney(e,info){
            let listElement = '<li>'+info.name+'</li>';
            journeyListing.insertAdjacentHTML('beforeend', listElement);
            // console.log('added '+info);
        }

        function deleteJourney(e){
            while (journeyListing.firstChild) {
                journeyListing.removeChild(journeyListing.firstChild);
            }
        }

        function closePopup(e, marker){
            marker.closePopup();
        }

        function endJourney(e){
            for(const marker of markers){
                // marker.removeEventListener('click', markerClick());
                marker.off('click');
            }

        }

    </script>
{% endblock %}
